---
interface Props {
    title: string;
}

const { title } = Astro.props;
---

<my-collapsible>
    <button type="button">
        <span class="headline">{title}</span>
        <span id="icon">+</span>
    </button>
    <div id="content-toggle">
        <div style="padding: 15px;">
            <slot />
        </div>
    </div>
</my-collapsible>

<script>
    class Collapsible extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector<HTMLButtonElement>("button");
            const content = this.querySelector<HTMLDivElement>("#content-toggle");
            const icon = this.querySelector<HTMLSpanElement>("#icon");
            if (button === null) throw Error("button not found");
            if (content === null) throw Error("content not found");
            if (icon === null) throw Error("icon not found");
            button.addEventListener("click", () => {
                if (content.style.maxHeight) {
                    content.style.maxHeight = "";
                    icon.textContent = "+";
                } else {
                    content.style.maxHeight = content.scrollHeight + "px";
                    icon.textContent = "â€“"; // warning: en dash, not -
                }
            });
        }
    }

    customElements.define("my-collapsible", Collapsible);
</script>

<style>
    my-collapsible {
        overflow: hidden;
        display: block;
        border-radius: 5px;
        margin-bottom: 25px;
    }

    button {
        width: 100%;
        padding: 8px 15px;
        display: flex;
        flex-wrap: nowrap;
        justify-content: space-between;
        align-items: center;
        color: var(--gray);
        cursor: pointer;
        outline: none;
        border: none;
    }

    .headline{
        font-size: 18px;
        text-align: left;
    }
    #icon {
        font-weight: bold;
        font-size: 26px;
    }

    #content-toggle {
        width: 100%;
        background: #f7f7f7;
        overflow: hidden;
        max-height: 0;
        transition: max-height 0.2s ease-out;
    }
</style>
