---
/* 4:5 */
import broschuere from '../../assets/broschuere_dark.png';


// Importierealle Bilder aus flipbook
const images = await Astro.glob('/src/assets/flipbook/*.{png,jpg,jpeg}');

images.sort((a, b) => {
  const getNumber = (src) => {
    const match = src.match(/(\d+)/);
    return match ? parseInt(match[1], 10) : 0;
  };

  const numA = getNumber(a.default.src);
  const numB = getNumber(b.default.src);

  return numA - numB;
});

import { Image } from 'astro:assets';
---

<div class="container">
    <h2>Unsere Broschüre<span>.</span></h2>
    <div class="broschuere-grid">
        <img class="round-img" src={broschuere.src} width="500" alt="Aktuelle Broschüre">
        <div>
            <p>
                Erfahren Sie alles über unsere erstklassigen Dienstleistungen, unsere starken Partner und die Referenzen unserer zufriedenen Kunden. 
                Lassen Sie sich von unseren abgeschlossenen Projekten inspirieren.
            </p>
            <p>
                Laden Sie die Broschüre herunter und erhalten Sie alle wichtigen Informationen auf einen Blick.
            </p>
            <a href="/media/broschuere_bauprojekt_gmbh_by_fmc_koehler.pdf">
                <button class="cta-btn">Downloaden</button>
            </a>
            <button id="openLightbox" class="cta-btn flipbook-btn">Broschüre anzeigen</button>
        </div>
    </div>

    <div id="lightbox" class="lightbox">
        <button id="closeLightbox" class="close-button">&times;</button>
        <div class="lightbox-content">
            <div class="book">
                {images.map((image, index) => {
                    if (index % 2 === 0) {
                        return (
                            <div class="page">
                            <div class={index === 0 ? "front cover" : "front"}>
                                <Image 
                                    class="round-img" 
                                    src={image.default} 
                                    alt={`Broschüre Seite ${index + 1}`}
                                />
                            </div>
                            {images[index + 1] && (
                                <div class="back">
                                    <Image 
                                        class="round-img" 
                                        src={images[index + 1]?.default} 
                                        alt={`Broschüre Seite ${index + 2}`}
                                    />
                                </div>
                            )}
                            </div>
                        );
                        }
                        return null;
                  })}
            </div>
        </div>
    </div>
    
</div>


<style>
    .broschuere-grid{
        display: grid;
        grid-template-columns: 500px 1fr;
        gap: 50px;
        margin-bottom: 80px;
    }
    .broschuere-grid > div{
        display: grid;
        grid-template-rows: auto 1fr;
    }
    .broschuere-grid .cta-btn{
        align-self: center;
    }
    @media (min-width: 768px) AND (max-width: 1000px){
        .broschuere-grid{
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 30px;
            margin-bottom: 60px;
        }
    }

    @media (max-width: 767px){
        .broschuere-grid{
            grid-template-columns: 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }
        .broschuere-grid > img{
            justify-self: center;
        }
        .flipbook-btn{
            display: none;
        }
    }

    /* lightbox */
    .lightbox {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        padding: 45px 5%;
        background-color: rgba(0, 0, 0, 0.7);
    }
    .lightbox-content {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        margin: 0;
        padding: 45px 25px;
        display: flex;
        overflow: hidden;
        color: hsl(180 68% 5%);
        /* background-image: radial-gradient(circle farthest-corner at 50% 50%, hsl(187 20% 88%) 30%, hsl(149 20% 94%) 100%); */
    }
    .close-button {
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 40px;
        color: #000;
        background: none;
        border: none;
        cursor: pointer;
    }

    /* flipbook */
    .book {
        position: relative;
        display: flex;
        margin: auto;
        width: 50%;
        aspect-ratio: 1/1;
        margin: auto;
        /*1* let pointer event go trough pages of lower Z than .book */
        pointer-events: none;
        transform-style: preserve-3d;
        transition: translate 1s;
        translate: calc(min(var(--c), 1) * 50%) 0%;
        counter-reset: page -1;
    }
    .book a {
        color: inherit;
    }
    .page {
        --thickness: 4;
        flex: none;
        display: flex;
        width: 100%;
        font-size: 20px;
        /*1* allow pointer events on pages */
        pointer-events: all;
        user-select: none;
        transform-style: preserve-3d;
        transform-origin: left center;
        transition:
            transform 1s,
            rotate 1s ease-in calc((min(var(--i), var(--c)) - max(var(--i), var(--c))) * 50ms);
        translate: calc(var(--i) * -100%) 0px 0px;
        transform: translateZ( calc((var(--c) - var(--i) - 0.5) * calc(var(--thickness) * .23cqmin)));
        rotate: 0 1 0 calc(clamp(0, var(--c) - var(--i), 1) * -180deg);
        box-shadow: 0em .5em 1em -.2em #00000020;
    }
    .front,
    .back {
        position: relative;
        flex: none;
        width: 100%;
        backface-visibility: hidden;
        overflow: hidden;
        background-color: #fff;
        translate: 0px;
        display: flex;
        flex-flow: column wrap;
        justify-content: space-between;
        padding: 2em;
        border: 1px solid #0002;
        background-image: linear-gradient(to right, #f7f7f7 80%, #eee 100%);
        border-radius: .5em .1em .1em .5em;
    }
    .front img,
    .back img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .front:has(img),
    .back:has(img) {
        padding: 0;
    }
    .front {
        background: linear-gradient(to left, #f7f7f7 80%, #eee 100%);
        border-radius: .1em .5em .5em .1em;
    }
    .back {
        translate: -100% 0;
        rotate: 0 1 0 180deg;
    }

</style>

<script>
    const openButton = document.getElementById('openLightbox');
    const closeButton = document.getElementById('closeLightbox');
    const lightbox = document.getElementById('lightbox');
  
    if (openButton && closeButton && lightbox) {
      openButton.addEventListener('click', () => {
        lightbox.style.display = 'block';
      });
  
      closeButton.addEventListener('click', () => {
        lightbox.style.display = 'none';
      });
  
      lightbox.addEventListener('click', (event) => {
        if (event.target === lightbox) {
          lightbox.style.display = 'none';
        }
      });
    }


    const flipBook = (elBook) => {
        elBook.style.setProperty("--c", 0); // Set current page
        elBook.querySelectorAll(".page").forEach((page, idx) => {
            page.style.setProperty("--i", idx);
            page.addEventListener("click", (evt) => {
            if (evt.target.closest("a")) return;
            const curr = evt.target.closest(".back") ? idx : idx + 1;
            elBook.style.setProperty("--c", curr);
            });
        });
    };

    document.querySelectorAll(".book").forEach(flipBook);
  </script>